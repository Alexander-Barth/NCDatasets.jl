name: CI-Binary-Builder
on:
  - push
  - pull_request
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
#          - '1.3'
          - '~1.8.0-0'
#          - 'nightly'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - run: |
          git config --global user.name Tester
          git config --global user.email te@st.er
      - name: Remove NetCDF_jll compat section
        run: |
           using TOML
           proj = TOML.parsefile("Project.toml")
           delete!(proj["compat"],"NetCDF_jll")
           open("Project.toml","w") do f
               TOML.print(f,proj)
           end
        shell: julia --color=yes --project=@. {0}
      - name: Install NetCDF_jll
        run: |
           using Pkg
           Pkg.add(url="https://github.com/Alexander-Barth/NetCDF_jll.jl")
           using NetCDF_jll
           @show NetCDF_jll.libnetcdf
           using LibCURL_jll
           if Sys.isapple()
               run(`otool -L $(LibCURL_jll.libcurl_path)`)
               run(`otool -L $(NetCDF_jll.libnetcdf_path)`)
           end
        shell: julia --color=yes --project=@. {0}
      - name: Test
        run: |
           using NetCDF_jll, NCDatasets
           @show NetCDF_jll.libnetcdf
           include(joinpath(dirname(pathof(NCDatasets)),"..","test","runtests.jl"))
        shell: julia --color=yes --project=@. {0}
